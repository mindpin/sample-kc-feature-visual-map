// Generated by CoffeeScript 1.7.1
(function() {
  var KnowledgeNetGraph,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  jQuery(function() {
    if (jQuery('body.sample').length) {
      return jQuery.getJSON('data/js/js.json', function(data) {
        return new KnowledgeNetGraph(jQuery('.graph-paper'), data);
      });
    }
  });

  KnowledgeNetGraph = (function() {
    function KnowledgeNetGraph($elm, data) {
      var _ref;
      this.$elm = $elm;
      this.data = data;
      this.__zoom = __bind(this.__zoom, this);
      this.$paper = jQuery('<div></div>').addClass('knowledge-net-paper').appendTo(this.$elm);
      this.SCALE = [0.25, 2];
      this.IMAGINARY_ROOT_NAME = 'IROOT';
      this.BASE_OFFSET_X = 300;
      _ref = [150, 180], this.NODE_WIDTH = _ref[0], this.NODE_HEIGHT = _ref[1];
      this.offset_x = 0;
      this.offset_y = 0;
      this.knet = new KnowledgeNet(this.data);
      this.draw();
    }

    KnowledgeNetGraph.prototype.draw = function() {
      this._bar();
      this._svg();
      this._tree();
      this._links();
      this._nodes();
      return this._events();
    };

    KnowledgeNetGraph.prototype._bar = function() {
      this.$bar = jQuery('<div></div>').addClass('bar').appendTo(this.$paper);
      return this.$scale = jQuery('<div></div>').addClass('scale').text('100 %').appendTo(this.$bar);
    };

    KnowledgeNetGraph.prototype._svg = function() {
      var zoom_behavior;
      zoom_behavior = d3.behavior.zoom().scaleExtent(this.SCALE).on('zoom', this.__zoom);
      this.svg = d3.select(this.$paper[0]).append('svg').attr('class', 'knsvg').call(zoom_behavior).on('dblclick.zoom', null);
      return this.graph = this.svg.append('g');
    };

    KnowledgeNetGraph.prototype.__zoom = function() {
      var scale, translate;
      scale = d3.event.scale;
      translate = d3.event.translate;
      this.__set_text_class(scale);
      this.graph.attr('transform', "translate(" + (translate[0] + this.offset_x * scale) + ", " + translate[1] + ") scale(" + scale + ")");
      return this.$scale.text("" + (Math.round(scale * 100)) + " %");
    };

    KnowledgeNetGraph.prototype.__set_text_class = function(scale) {
      var klass;
      klass = ['name'];
      if (scale < 0.75) {
        klass.push('hide');
      }
      return this.name_texts.attr('class', (function(_this) {
        return function(d) {
          if (d.name === _this.IMAGINARY_ROOT_NAME) {
            return "iroot " + klass.join(' ');
          } else {
            return klass.join(' ');
          }
        };
      })(this));
    };

    KnowledgeNetGraph.prototype._tree = function() {
      var first_node, imarginay_root;
      this.tree_data = this.knet.get_tree_nesting_data();
      imarginay_root = {
        name: this.IMAGINARY_ROOT_NAME,
        children: this.tree_data.roots
      };
      this.tree = d3.layout.tree().nodeSize([this.NODE_WIDTH, this.NODE_HEIGHT]);
      this.nodes = this.tree.nodes(imarginay_root);
      first_node = this.tree_data.roots[0];
      this.offset_x = -first_node.x + this.BASE_OFFSET_X;
      return this.graph.attr('transform', "translate(" + this.offset_x + ", 0)");
    };

    KnowledgeNetGraph.prototype._nodes = function() {
      this.nodes = this.graph.selectAll('.node').data(this.nodes).enter().append('g').attr({
        'class': 'node',
        'transform': function(d) {
          return "translate(" + d.x + ", " + d.y + ")";
        }
      });
      this.circles = this.nodes.append('circle').attr({
        'r': 15,
        'class': (function(_this) {
          return function(d) {
            var klass;
            klass = [];
            if (d.name === _this.IMAGINARY_ROOT_NAME) {
              klass.push('iroot');
            }
            if (d.depth === 1) {
              klass.push('start-point');
            }
            return klass.join(' ');
          };
        })(this)
      });
      this.name_texts = this.nodes.append('text').attr({
        'y': 45,
        'text-anchor': 'middle'
      }).html(function(d) {
        var dy, i, re, str;
        re = (function() {
          var _i, _len, _ref, _results;
          _ref = KnowledgeNet.break_text(d.name);
          _results = [];
          for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            str = _ref[i];
            dy = i === 0 ? '0' : '1.5em';
            _results.push("<tspan x='0' dy='" + dy + "'>" + str + "</tspan>");
          }
          return _results;
        })();
        return re.join('');
      });
      return this.__set_text_class(1);
    };

    KnowledgeNetGraph.prototype._links = function() {
      var edges;
      edges = this.tree_data.edges;
      return this.links = this.graph.selectAll('.link').data(edges).enter().append('path').attr({
        'd': d3.svg.diagonal(),
        'class': (function(_this) {
          return function(d) {
            if (d.source.name === _this.IMAGINARY_ROOT_NAME) {
              return 'iroot link';
            } else {
              return 'link';
            }
          };
        })(this)
      });
    };

    KnowledgeNetGraph.prototype._events = function() {
      var that;
      that = this;
      return this.circles.on('mouseover', function(d, i) {
        var links;
        links = that.links.filter(function(d1) {
          return d1.target.id === d.id;
        });
        return links.attr({
          'class': 'link hover'
        });
      }).on('mouseout', function(d) {
        var links;
        links = that.links.filter(function(d1) {
          return d1.target.id === d.id;
        });
        return links.attr({
          'class': 'link'
        });
      }).on('click', function(d) {});
    };

    return KnowledgeNetGraph;

  })();

}).call(this);

//# sourceMappingURL=ui.map
